buildscript {
    repositories {
        gradlePluginPortal()
        mavenCentral()
    }
    dependencies {
        classpath 'com.diffplug.spotless:spotless-plugin-gradle:6.25.0' // 최신 안정 버전
    }
}

plugins {
    id 'java'
    id 'checkstyle'
    id 'org.springframework.boot' version '3.5.5'
    id 'io.spring.dependency-management' version '1.1.7'
}

apply plugin: 'com.diffplug.spotless' // Spotless 플러그인 적용

spotless {
    java {
        // Google Java Format 사용
        googleJavaFormat()
        indentWithSpaces(4) // 4스페이스 들여쓰기 강제
    }
}

group = 'com.backsuend'
version = '0.0.1-SNAPSHOT'
description = '한국 이커머스 기본 기능 개발 프로젝트'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(24)
    }
}

checkstyle {
    toolVersion = '11.0.0'
    configFile = file('src/main/resources/convention/google_checks.xml')
    ignoreFailures = false
    showViolations = true
    configProperties = [
        'org.checkstyle.google.suppressionfilter.config': file('src/main/resources/convention/checkstyle-suppressions.xml').absolutePath
    ]
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'

    // 테스트 의존성
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.mockito:mockito-inline:5.2.0'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation 'com.h2database:h2' // 테스트용 인메모리 DB

    //JWT
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.13.0'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.13.0'
    implementation 'io.jsonwebtoken:jjwt-api:0.13.0'
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.withType(Checkstyle).configureEach {
    reports {
        html.required = true
        xml.required = false
        html.outputLocation = layout.buildDirectory.file("reports/checkstyle/${name}.html").get().asFile
    }
}