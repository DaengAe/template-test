# -------------------------------------------------------
# GitHub Actions CI 파이프라인 (Java 24 + MySQL + Redis)
# -------------------------------------------------------
# 목적:
#   - PR 생성 시 자동으로 빌드/테스트/코드 스타일 검사를 수행
#   - main, develop 브랜치에 병합되기 전에 반드시 검증 강제
# -------------------------------------------------------

name: CI Pipeline

on:
  pull_request:
    branches: [ develop, main ]   # PR 대상 브랜치 (main, develop)일 때만 실행

jobs:
  build-test-lint:
    runs-on: ubuntu-latest        # GitHub이 제공하는 Linux Runner 환경

    # --- (1) 외부 서비스 컨테이너 정의 ---
    # 테스트 시 필요한 MySQL, Redis를 GitHub Runner 내부에서 실행
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: cou_commerce
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

      redis:
        image: redis:7
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      # --- (2) 저장소 체크아웃 ---
      - name: Checkout Repository
        uses: actions/checkout@v4

      # --- (3) JDK 24 세팅 ---
      - name: Set up JDK 24
        uses: actions/setup-java@v4
        with:
          java-version: '24'       # 프로젝트에서 사용하는 자바 버전
          distribution: 'temurin'

      # --- (4) Gradle 캐시 (빌드 속도 최적화) ---
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # --- (5) 빌드 ---
      - name: Build Project
        run: ./gradlew build --no-daemon

      # --- (6) 단위 테스트 ---
      - name: Run Unit Tests
        run: ./gradlew test --no-daemon

      # --- (7) 코드 컨벤션 검사 (Checkstyle + Spotless) ---
      - name: Lint Check (Checkstyle + Spotless)
        run: |
          ./gradlew checkstyleMain checkstyleTest --no-daemon
          ./gradlew spotlessCheck --no-daemon
